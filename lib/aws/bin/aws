#!/bin/bash

# todo: awscli installation management
AWS_BIN="$(realpath -L -- "$(dirname -- "$0")/../../../usr/aws/aws-cli/v2/2.9.19/bin/aws")"

main() {
	local aws_args=()
	local cmd_args=()
	local cmd=aws

	while [ $# -gt 0 ]; do
		case "$1" in
			--version|-v)
				echo "$AWS_BIN"
				aws_args+=(--version)
				;;
			--profile|-p)
				shift
				aws_args+=(--profile $1)
				;;
			--region|-r)
				shift
				aws_args+=(--region $1)
				;;
			id)
				cmd_args+=(sts get-caller-identity)
				;;
			eks-login)
				cmd_args+=(eks update-kubeconfig --name)
				;;
			ecr-login)
				cmd=ecr_login
				;;
			ec2-locate|where)
				cmd=print_instance_by_region
				;;
			regions|r)
				cmd=print_regions
				;;
			ssm-get-parameter-decrypted|ssm-decrypt)
				shift
				cmd_args=(ssm get-parameter --with-decryption --query Parameter.Value --output text "${cmd_args[@]}" --name "$1")
				;;
			*)
				cmd_args+=($1)
				;;
		esac
		shift
	done

	"$cmd" "${aws_args[@]}" "${cmd_args[@]}"
}

id() {
	aws "$@" sts get-caller-identity
}

# Call docker login for aws ecr
ecr_login() {
	if [ "$1" != --region ]; then
		echo "error: No region provided"
		echo "example:"
		echo "  aws ecr-login --region <region>"
		return 1
	fi
	if [ $# -ne 2 ]; then
		echo "error: Too many arguments provided"
		echo "example:"
		echo "  aws ecr-login --region <region>"
		return 1
	fi
	local account_id=$(id "$@" | jq -r .Account)

	aws ecr get-login-password "$@" | docker login --username AWS --password-stdin $account_id.dkr.ecr.$2.amazonaws.com
}

print_regions() {
	aws "$@" ec2 describe-regions \
    --all-regions \
    --query "Regions[].{Name:RegionName}" \
    --output text
}

aws() {
	$AWS_BIN "$@"
}

print_instance_by_region() {
	for region in `print_regions`; do
		echo -ne "$region\t"
		aws "$@" ec2 describe-instances --region $region "$@" | jq '.Reservations|length'
	done
}

main "$@"
